---
# List of plays
-
  # Hosts: where our play will run and options it will run with
  hosts: localhost
  connection: local
  gather_facts: yes
  tags: always

  # Vars: variables that will apply to the play, on all targets 

  # Tasks: the list of tasks that will be executed within 
  #        the play, this section can also be used for 
  #        pre and post tasks
  tasks:
    # from https://superuser.com/questions/1395954/ansible-playbook-to-determine-os-release
  - name: System details
    debug: msg="{{ item }}"
    with_items: 
    - "{{ ansible_distribution }}"
    - "{{ ansible_distribution_version }}"
    - "{{ ansible_distribution_major_version }}"
  - name: Verify install_files is present
    debug: msg="install_files/_README = {{ lookup('file', '/home/kasm-default-profile/install_files/_README') }}"
    # Detect if we are running on a WSL2 environment
  - name: Set wsl2_environment fact default to false
    set_fact:
      wsl2_environment: false
  - name: Set wsl2_environment fact True
    set_fact:
      wsl2_environment: true
    when: ansible_kernel is search("microsoft-standard-WSL2")

    # NOTE: Uncomment the two lines below if you want to test your Ansible installation 
    # before proceeding with the rest of the playbook.
    #
    # This is typically only necessary if you are changing the default Ansible installation
    # that comes with the geoCML base image.
    #roles:
    #   - role: irixjp.role_example_hello

# Add additional plays here (remember the list entry -)
# Be sure to use the same hosts and connection entries above
# additional plays

- 
  # Install sudo
  hosts: localhost
  connection: local
  tasks:
  - name: Preserve DONT_PROMPT_WSL_INSTALL in sudoers
    lineinfile:
      path: "/etc/sudoers"
      line: "Defaults        env_keep += \"DONT_PROMPT_WSL_INSTALL\""
    when: wsl2_environment

-
  # Configure PostgreSQL + PostGIS
  hosts: localhost
  connection: local
  gather_facts: yes
  become: yes
  tasks:
  - name: Start PostgreSQL service
    service:
        enabled: yes
        name: postgresql
        state: started
  - name: Allow postgres to sign in with peer authentication
    become_user: postgres
    community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/12/main/pg_hba.conf
        address: local 
        users: postgres 
        method: peer
        create: yes
  - name: Set postgres' password
    become_user: postgres
    community.postgresql.postgresql_query:
        query: ALTER USER postgres PASSWORD 'admin';
  - name: Create new Postgres user
    become_user: postgres
    community.postgresql.postgresql_user:
        name: geocml
        password: geocml
        role_attr_flags: "CREATEDB,NOSUPERUSER"
  - name: Create new Postgres database
    become_user: postgres
    community.postgresql.postgresql_db:
        name: geocml_db
        conn_limit: 100 # TODO: Do we need to limit this? Might be good to give people the option
  - name: Give geocml full privs to geocml_db
    become_user: postgres
    community.postgresql.postgresql_privs:
        type: database
        database: geocml_db
        roles: geocml
        grant_option: no
        privs: all
  - name: Set geocml as owner of geocml_db
    become_user: postgres
    community.postgresql.postgresql_owner:
        db: geocml_db
        new_owner: geocml
  - name: Allow geocml access to geocml_db from ipv4 localhost 127.0.0.1
    become_user: postgres
    community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/12/main/pg_hba.conf
        contype: host
        users: geocml 
        source: 127.0.0.1
        databases: geocml_cb 
        method: md5 
        create: yes
  - name: Add PostGIS extension to geocml_db
    become_user: postgres
    community.postgresql.postgresql_ext:
        db: geocml_db
        name: postgis
  - name: Restart PostgreSQL service
    service:
        enabled: yes
        name: postgresql
        state: restarted # TODO: add a test here to make sure that there are no exceptions from Postgres after configuration

- 
  # Create default user
  hosts: localhost
  connection: local
  tasks:
  - name: Create default user
    ansible.builtin.user:
        name: default
        password: $6$y5bV.F7ASOab$Mj7q.8PSdc5edv72obVZ0vuEzUuvTvV06uJTZ0SidIxJQ9uSKNRSQWt/UwHy9vmoAM1EdtRwvCegKEsPkWuVd1 # pw: default
        home: /home/kasm-user
        group: postgres

# Three dots indicate the end of a YAML document
...
